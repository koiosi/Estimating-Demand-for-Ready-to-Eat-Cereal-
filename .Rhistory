getwd()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(haven)
library(modelsummary)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(tidyr)
library(naniar)
library(fixest)
library(lfe)
library(sandwich)
library(lmtest)
library(knitr)
library(corrplot)
datapath <- file.path(getwd(), "Cereal_Data.xls")
cerealdata <- read_excel(datapath)
sapply(cerealdata, function(x) sum(is.na(x)))
library(naniar)
vis_miss(cerealdata, warn_large_data = FALSE)
cerealdata <- na.omit(cerealdata)
datasummary( All(cerealdata) ~ mean + sd + min + median + max, fmt = 4, data = cerealdata, output = "markdown")
# create a variable "coupon"
cerealdata <- cerealdata%>%
mutate(coupon = `Avg Shelf Price` - `Avg Trans Price`)
# Group, breakfast cereals under the different market segment
avg_prices_by_segment <- cerealdata %>%
group_by(Sgmnt) %>%
summarise(AvgShelfPrice = mean(`Avg Shelf Price`, na.rm = TRUE))
print(avg_prices_by_segment)
# Different prices for consumer heterogeneity
plot_1 <- ggplot(cerealdata, aes(x = Sgmnt, y = `Avg Shelf Price`, fill = Sgmnt)) +
geom_boxplot() +
labs(x = "Segment",
y = "Average Shelf Price") +
theme_minimal() +
scale_fill_brewer(palette = "Pastel1") +
theme(plot.title = element_text(face = "italic"))
ggsave("Comparison of Average Shelf Prices by Segment.jpeg", plot = plot_1, width = 10, height = 6, dpi = 600)
print(plot_1)
#
# # Top 10 cereals in the market based on their Market share
#
# plot_2 <- cerealdata %>%
#   top_n(10, `Mkt Share`) %>%
#   ggplot(aes(x = reorder(Name, `Mkt Share`), y = `Mkt Share`)) +
#   geom_bar(stat = "identity", fill = "darkblue") +
#   coord_flip() + # This makes it horizontal for better readability
#   labs(title = "Top 10 Cereals by Market Share", x = "", y = "Market Share (%)") +
#   theme_minimal()
#
# print(plot_2)
#
# ggsave(filename = "Top 10 Cereals by Market Share.jpeg" ,plot_2 )
# Seeing the different price and different nutritional values
# Identifying the row with the maximum value for each variable
max_fat <- cerealdata[which.max(cerealdata$Fat),]
max_cals <- cerealdata[which.max(cerealdata$Cals),]
max_sugar <- cerealdata[which.max(cerealdata$Sugar),]
max_price <- cerealdata[which.max(cerealdata$`Avg Shelf Price`),]
# Combining these into a single data frame for annotation
max_values <- bind_rows(max_fat, max_cals, max_sugar, max_price)
plot_3 <- ggplot(cerealdata, aes(x = Sugar, y = `Avg Shelf Price`, size = Cals, color = Fat)) +
geom_point(alpha = 0.7) +
geom_label(data = max_values,
aes(label = paste("F:", round(Fat,1), "C:", round(Cals,0), "S:", round(Sugar,0), "P:", round(`Avg Shelf Price`,2))),
hjust = 0.9, vjust = 1.5,
size = 3,
label.size = NA,
lineheight = 0.9,
fontface = "italic",
color = "black") +
scale_color_gradient(low = "yellow", high = "red") +
labs(x = "Sugar Content (S)",
y = "Avg Shelf Price (P)",
color = "Fat Content",
size = "Calorie Count") +
theme_minimal() +
guides(color = guide_colourbar(title = "Fat (F)"), size = guide_legend(title = "Calories (C)")) +
theme(legend.position = "right")
ggsave(filename = "Average Shelf Price vs. Nutritional Values.jpeg", plot = plot_3, dpi = 900)
print(plot_3)
# ggplot(cerealdata, aes(x = `Avg Ad Expn`, y = coupon)) +
#   geom_point(aes(color = Sgmnt), alpha = 0.7) +
#   geom_smooth(method = "lm", se = FALSE, color = "gray") +
#   labs(title = "Relationship Between Advertising Expenses and Discounts",
#        x = "Average Advertising Expenditure",
#        y = "Discount Amount") +
#   theme_minimal() +
#   scale_color_brewer(palette = "Pastel1")
# Different Discounts for different Segment
plot_4 <- ggplot(cerealdata, aes(x = Sgmnt, y = coupon, fill = Sgmnt)) +
geom_point() +
labs(x = "Segment",
y = "Discount Amount") +
theme_minimal() +
scale_fill_brewer(palette = "Pastel1") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 0.5) +
theme(plot.title = element_text(face = "italic"))
ggsave(filename = "Discount Distribution by Segment.jpeg",plot = plot_4, dpi = 600)
print(plot_4)
#
plot_5 <- cerealdata %>%
group_by(Sgmnt) %>%
summarise(AvgCalories = mean(Cals, na.rm = TRUE),
AvgFat = mean(Fat, na.rm = TRUE),
AvgSugar = mean(Sugar, na.rm = TRUE)) %>%
gather(key = "Nutrient", value = "Average", -Sgmnt) %>%
ggplot(aes(x = Sgmnt, y = Average, fill = Nutrient)) +
geom_bar(stat = "identity") +
labs(x = "Segment", y = "Average Value") +
theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggsave(filename = "Average Nutritional Values by Segment.jpeg",plot = plot_5, dpi = 600)
print(plot_5)
unique_product <- unique(cerealdata$Name)
unique_product
cerealdata <- cerealdata %>%
mutate(Brand = sub(" .*", "", Name))
unique_brand <- unique(cerealdata$Brand)
unique_brand
# Calculating total market share for each brand
df_brand <- cerealdata %>%
group_by(Brand) %>%
summarize(total_market_share = sum(`Mkt Share`)) %>%
arrange(desc(total_market_share))
# Plot
plot_6 <- ggplot(df_brand, aes(x = reorder(Brand, total_market_share), y = total_market_share, fill = Brand)) +
geom_bar(stat = "identity") +
geom_text(aes(label = total_market_share), position = position_stack(vjust = 0.5), size = 3.5, color = "black") +
labs(x = "Brand",
y = "Total Market Share (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
ggsave("Market Share by Brands.jpeg", plot_6)
print(plot_6)
# Counting the number of products for each brand
brand_counts <- cerealdata %>%
group_by(Brand) %>%
summarise(Products = n())
# Creating a bar plot showing the number of products for each brand
plot_7 <- ggplot(brand_counts, aes(x = reorder(Brand, Products), y = Products, fill = Brand)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Products), position = position_stack(vjust = 0.5), size = 3.5, color = "black") +
coord_flip() +
labs(x = "Brand",
y = "Number of Products") +
theme_minimal() +
theme(legend.position = "none")
ggsave("Number of Products by Brand.jpeg", plot_7)
print(plot_7)
unique_product <- unique(cerealdata$Name)
unique_product
library(ggplot2)
# Calculate total market share for each brand
df_brand <- cerealdata %>%
group_by(Brand) %>%
summarize(total_market_share = sum(`Mkt Share`)) %>%
arrange(desc(total_market_share))
# Plot
ggplot(df_brand, aes(x = reorder(Brand, total_market_share), y = total_market_share, fill = Brand)) +
geom_bar(stat = "identity") +
labs(title = "Market Share by Brand",
x = "Brand",
y = "Total Market Share (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
datapath <- file.path(getwd(), "Cereal_Data.xls")
cerealdata <- read_excel(datapath)
cerealdata <- na.omit(cerealdata)
names(cerealdata)
outside_share=100-round(sum(cerealdata$`Mkt Share`))
cerealdata <- cerealdata %>%
mutate(
Brand = word(Name, 1, sep = " "),
Product = word(Name, 2, sep = " "))
cerealdata$fbrand <- as.factor(cerealdata$Brand)
cerealdata$fsegment <- as.factor(cerealdata$Sgmnt)
names(cerealdata)
cerealdata <- cerealdata %>%
mutate(dummy = model.matrix(~ fbrand - 1, data = .))
coef <- list('Intercept'="Intercept",
'Cals' = 'Caloric content of the product, per portion',
'Fat' = 'Fat content of the product, per portion',
'Sugar' = 'Sugar content of the product, per portion',
'Avg Shelf Price' = 'Average shelf price')
gof <- data.frame(raw = c("nobs", "adj.r.squared"),
clean = c("Observations", "R2 adj."),
fmt = c(0,3))
fe <- data.frame(FE = c("Brand FE","errors"),
mod1 = c("No","idd"),
mod2 = c("No","HC1"),
mod3 = c("No","clustered"),
mod4 = c("Yes","idd"),
mod5 = c("Yes","HC1"),
mod6 = c("Yes","clustered"))
attr(fe, "position") <- c(11,12)
modelsummary(list(ols_1, ols_2, ols_3, ols_4, ols_5,ols_6),
stars = c("*" = .1, "**" = .05, "***" = .01),
title = "Table 1: Analysis of cereal market using OLS with and without brand fixed-effects",gof_map = gof, add_rows = fe, output = "markdown")
